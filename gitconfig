[user]
	email = dev@mupat.net
	name = Mupat
[push]
  default = simple
[alias]
  branch-name = "!git rev-parse --abbrev-ref HEAD"
  remote-weburl = "!git remote -v | grep origin | grep fetch | awk '{print $2}' | sed 's/git@/https:\\/\\//' | sed 's/com:/com\\//' | sed 's/\\.git//'"
	deleteable-branches = "!git branch -vv | grep -v '*' | grep ': gone]' | awk '{print $1}'"
  lg = log --pretty=format:"%h %ad | %s%d [%an]" --graph --date=short
  ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
  ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
  history = log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short
  cp = cherry-pick
  stt = "!git status -s | while read -n2 mode; read -n1; read file; do echo $mode $(date -r $file +\"%Y-%m-%d %H:%M:%S\") $file; done| sort -r"
  cl = clone
  ci = commit
  co = checkout
  cod = checkout develop
  com = checkout master
  col = checkout @{-1}
  br = "!git for-each-ref --format='%(committerdate:relative) %(refname:short)' --sort committerdate refs/heads | column -t -s ' '"
  bra = branch --all
  brr = branch -m
  df = diff
  dc = diff --cached
  a = add
  aa = add --all
  pu = push
  puuc = "!git push -u origin $(git branch-name)"
  put = "!git push && git push --tags"
  pl = pull
  re = remote
  f = fetch
  fa = fetch --all
  fp = fetch --prune
  m = merge
  mod = merge origin/develop
  mud = merge upstream/develop
  ce = config user.email
  cu = config user.name
  ta = tag -a
  t = tag
  tl = ! git tag --sort='version:refname' | tail -1
  rh = reset --hard
  st = status -s
  squash = "!git rebase -i $(git merge-base $(git branch-name) origin/master)"
  rb = rebase master
  cleanup = "!git fp && $(git deleteable-branches | xargs -n 1 git branch -d)"
  cleanup-force = "!git fp && $(git deleteable-branches | xargs -n 1 git branch -D)"
  alias = "!git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ /"
  open = "!open $(git remote-weburl)"
  pr = "!open $(git remote-weburl)/pull/new/$(git branch-name)"
[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true
[credential]
	helper = osxkeychain
[color]
	ui = auto
[rerere]
	enabled = true
